package cn.edu.ccut.dao.impl;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.hibernate.Session;
import org.hibernate.query.Query;

import cn.edu.ccut.dao.IStudentDAO;
import cn.edu.ccut.vo.Student;

public class StudentDAOImpl implements IStudentDAO {
	private Session session;

	public StudentDAOImpl() {
	}

	@Override
	public boolean doCreate(Student vo) throws Exception {
		try {
			session.beginTransaction();
			session.save(vo);
			session.getTransaction().commit();
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	@Override
	public Student findById(Integer id) throws Exception {
		session.beginTransaction();
		Student vo = session.get(Student.class, id);
		session.getTransaction().commit();
		return vo;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Student> doListAll() throws Exception {
		List<Student> all = new ArrayList<Student>();
		session.beginTransaction();
		Query<Student> query = session.createQuery("from Student");
		all = query.getResultList();
		session.getTransaction().commit();
		return all;
	}

	@SuppressWarnings("unchecked")
	@Override
	public boolean doLogin(String username, String password) throws Exception {
		session.beginTransaction();
		Query<Student> query = session.createQuery("from User where username=? and password=?");
		query.setParameter(0, username);
		query.setParameter(1, password);
		int size = query.getResultList().size();
		session.getTransaction().commit();
		if (size == 1) {
			return true;
		}
		return false;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Student> doListAll(Integer currentPage, Integer lineSize) throws Exception {
		List<Student> all = new ArrayList<Student>();
		session.beginTransaction();
		Query<Student> query = session.createQuery("from Student");
		query.setFirstResult((currentPage - 1) * lineSize);
		query.setMaxResults(lineSize);
		all = query.getResultList();
		session.getTransaction().commit();
		return all;
	}

	@Override
	public boolean doRemove(Integer id) throws Exception {
		try {
			Student vo = findById(id);
			session.beginTransaction();
			session.delete(vo);
			session.getTransaction().commit();
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	@Override
	public boolean doUpdate(Student vo) throws Exception {
		try {
			session.beginTransaction();
			session.update(vo);
			session.getTransaction().commit();
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	@Override
	public boolean doBantchRemove(Set<Integer> all) throws Exception {
		try {
			Iterator<Integer> iter = all.iterator();
			while (iter.hasNext()) {
				Student vo = findById(iter.next());
				session.beginTransaction();
				session.delete(vo);
				session.getTransaction().commit();
			}
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}
}
