package cn.edu.ccut.service.impl;

import java.util.List;
import java.util.Set;

import cn.edu.ccut.factory.DAOFactory;
import cn.edu.ccut.service.IStudentService;
import cn.edu.ccut.util.HibernateUtil;
import cn.edu.ccut.vo.Student;

public class StudentServiceImpl implements IStudentService {
	
	public StudentServiceImpl() {
	}

	@Override
	public boolean insert(Student vo) throws Exception {
		try {
			return DAOFactory.getStudentDAO().doCreate(vo);
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		} finally {
			HibernateUtil.closeSession();
		}
	}

	@Override
	public List<Student> listAll() throws Exception {
		try {
			return DAOFactory.getStudentDAO().doListAll();
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		} finally {
			HibernateUtil.closeSession();
		}
	}

	@Override
	public boolean login(String username, String password) throws Exception {
		try {
			return DAOFactory.getStudentDAO().doLogin(username, password);
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		} finally {
			HibernateUtil.closeSession();
		}
	}

	@Override
	public List<Student> listAll(int currentPage, int lineSize) throws Exception {
		try {
			return DAOFactory.getStudentDAO().doListAll(currentPage, lineSize);
		}catch (Exception e) {
			e.printStackTrace();
			throw e;
		} finally {
			HibernateUtil.closeSession();
		}
	}

	@Override
	public boolean delete(int id) throws Exception {
		try {
			return DAOFactory.getStudentDAO().doRemove(id);
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		} finally {
			HibernateUtil.closeSession();
		}
	}

	@Override
	public boolean update(Student vo) throws Exception {
		try {
			return DAOFactory.getStudentDAO().doUpdate(vo);
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		} finally {
			HibernateUtil.closeSession();
		}
	}

	@Override
	public boolean bantchDelete(Set<Integer> all) throws Exception {
		try {
			return DAOFactory.getStudentDAO().doBantchRemove(all);
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		} finally {
			HibernateUtil.closeSession();
		}
	}
}
